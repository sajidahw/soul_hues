import { Box, Avatar, Typography, Button, IconButton } from "@mui/material";
import { React, useRef, useState } from "react";
import { useAuth } from "../context/AuthContext";
import ChatItem from "../components/chat/ChatItem";
import purple from "@mui/material/colors/purple";
import blue from "@mui/material/colors/blue";
import { IoMdSend } from "react-icons/io";
import { sendChatRequest } from "../helpers/api-communicator";

// static chats generated by chat-gpt 4
// const chatMessages = [
//   // {
//   //   role: "system",
//   //   content:
//   //     "Soul Hues is a unique chatbot that specializes in identifying a user's personality color through a series of insightful questions. You start by engaging the user in a conversation about their interests, values, and behaviors. The interaction gradually becomes more specific, delving into areas like stress responses, social preferences, and problem-solving styles. This careful exploration helps you to analyze and suggest a color that mirrors the user's personality traits. After the user confirms the colors are representative, you will show an image with the help of DALL-E of the approved colors. Following this, you will ask if the user would like to create a watercolor painting with these colors. The primary goal of this conversation is to provide users with a visual and artistic representation of their personality, enhancing the personalization of the experience.",
//   // },
//   {
//     role: "assistant",
//     content:
//       "I'm a chatbot AI. I'm here to help you with your personality color and create it into artwork!",
//   },
//   { role: "assistant", content: "Tell me about your favorite activities." },
//   { role: "user", content: "I love to play soccer." },
//   { role: "assistant", content: "Describe your ideal weekend." },
//   { role: "user", content: "I like to go to the beach." },
//   {
//     role: "assistant",
//     content: "What do you enjoy doing in your free time?",
//   },
//   { role: "user", content: "I like to read." },
//   { role: "assistant", content: "How do you handle stress?" },
//   { role: "user", content: "I like to meditate." },
//   { role: "assistant", content: "What's important to you in friendships?" },
//   { role: "user", content: "I like to have deep conversations." },
//   {
//     role: "assistant",
//     content:
//       "Based on your responses, I think your personality color is blue. Do you agree?",
//   },
//   { role: "user", content: "Yes, I agree." },
//   {
//     role: "assistant",
//     content:
//       "Great! I will show you an image with the help of DALL-E of the approved colors. Would you like to create a watercolor painting with these colors?",
//   },
//   {
//     role: "user",
//     content:
//       "Yes, I would like to create a watercolor painting with these colors.",
//   },
// ];

type Message = {
  role: "user" | "assistant" | "system";
  content: string;
};

const Chat = () => {
  const inputRef = useRef<HTMLInputElement | null>(null); // manipulate DOM or w/o rerendering
  const auth = useAuth();
  const [chatMessages, setChatMessages] = useState<Message[]>([]);
  const handleSubmit = async () => {
    // used with onClick for IconButton

    // get data from inputRef
    // console.log(inputRef.current?.value);
    const content = inputRef.current?.value as string;
    if (inputRef && inputRef.current) {
      inputRef.current.value = "";
    } // clears input after user submits

    // defined var: type
    const newMessage: Message = { role: "user", content };
    // const newMessage: Message = {
    //   role: "assistant",
    //   content:
    //     "I'm a chatbot AI. I'm here to help you with your personality color and create it into artwork!",
    // };

    // new message stored inside Message[]
    setChatMessages((prevMessages) => [...prevMessages, newMessage]); // ...to clone/combine objects

    // send API request to backend with new msg
    const chatData = await sendChatRequest(content);
    // updating & consolidating chatMessages
    setChatMessages([...chatData.chats]);
  };

  return (
    <Box
      sx={{
        display: "flex",
        flex: 1,
        width: "100%",
        height: "100%",
        mt: 3,
        gap: 3,
      }}
    >
      <Box
        sx={{
          display: { md: "flex", xs: "none", sm: "none" },
          flex: 0.2,
          flexDirection: "column",
        }}
      >
        <Box
          sx={{
            display: "flex",
            width: "100%",
            height: "80vh",
            bgcolor: "rgb(33, 51, 117)",
            borderRadius: 7,
            flexDirection: "column",
            mx: 3,
          }}
        >
          <Avatar
            sx={{
              mx: "auto",
              my: 2,
              bgcolor: "rgb(40, 18, 46)", //black
              color: "rgb(250, 203, 122)", //white
              fontWeight: 700,
            }}
          >
            {auth?.user?.name[0]} {auth?.user?.name.split(" ")[1][0]}
          </Avatar>

          <Typography
            sx={{
              mx: "auto",
              fontFamily: "work sans",
              p: 1,
              my: 1.5,
              fontWeight: 600,
              bgcolor: "rgb(150, 18, 148)",
              borderRadius: 2,
            }}
          >
            Let's discover your personality color and create it into artwork!
          </Typography>

          <Typography
            sx={{
              mx: 1,
              my: 1.2,
              fontFamily: "work sans",
              p: 1,
              bgcolor: blue[700],
              borderRadius: 3,
            }}
          >
            Tell me about your favorite activities.
          </Typography>

          <Typography
            sx={{ mx: 1, fontFamily: "work sans", p: 1.5, fontStyle: "italic" }}
          >
            Describe your ideal weekend.
          </Typography>

          <Typography
            sx={{
              mx: 1,
              fontFamily: "work sans",
              p: 1,
              bgcolor: blue[700],
              borderRadius: 3,
            }}
          >
            What do you enjoy doing in your free time?
          </Typography>

          <Typography
            sx={{ mx: 1, fontFamily: "work sans", p: 1.5, fontStyle: "italic" }}
          >
            How do you handle stress?
          </Typography>

          <Typography
            sx={{
              mx: 1,
              fontFamily: "work sans",
              p: 1,
              bgcolor: blue[700],
              borderRadius: 3,
            }}
          >
            What's important to you in friendships?
          </Typography>

          <Button
            sx={{
              width: "200px",
              my: "auto",
              color: "white",
              fontWeight: "700",
              borderRadius: 3,
              mx: "auto",
              // mb: 4,
              bgcolor: purple[700],
              ":hover": { bgcolor: purple.A200 },
            }}
          >
            Clear Conversation
          </Button>
        </Box>
      </Box>
      <Box
        sx={{
          display: "flex",
          flex: { md: 0.8, xs: 1, sm: 1 },
          flexDirection: "column",
          px: 3,
        }}
      >
        <Typography
          sx={{
            textAlign: "center",
            fontSize: "40px",
            color: "white",
            mb: 2,
            mx: "auto", // 5
            fontWeight: 600,
          }}
        >
          AI GPT-4 Turbo
        </Typography>

        <Box
          sx={{
            width: "100%",
            height: "60vh",
            borderRadius: 3,
            mx: "auto",
            display: "flex",
            flexDirection: "column",
            overflow: "scroll",
            overflowX: "hidden",
            overflowY: "auto",
            scrollBehavior: "smooth",
          }}
        >
          {chatMessages.map((chat, index) => (
            //@ts-ignore
            <ChatItem role={chat.role} content={chat.content} key={index} />
          ))}
        </Box>
        <div
          style={{
            width: "100%",
            padding: "20px",
            borderRadius: 8,
            backgroundColor: "rgb(75, 32, 52)",
            display: "flex",
            margin: "auto",
          }}
        >
          <input
            ref={inputRef}
            type="text"
            style={{
              width: "100%",
              backgroundColor: "transparent",
              padding: "10px",
              border: "none",
              outline: "none",
              color: "white",
              fontSize: "20px",
            }}
          />
          <IconButton
            onClick={handleSubmit}
            sx={{ ml: "auto", color: "white" }}
          >
            <IoMdSend />
          </IconButton>
        </div>
      </Box>
    </Box>
  );
};

export default Chat;
// pale yellow: 249, 250, 195
// oryell: 250, 230, 187
// peach orange: 250, 203, 122
// royal blue: 48, 73, 161
